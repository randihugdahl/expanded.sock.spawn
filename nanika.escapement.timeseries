library(readxl)
library(tidyverse)
library(ggplot2)
#library(gridExtra)



test.auc.allinone <- function (day, count, res.time){
  data.frame(day, count) %>% 
    add_row(day=0, count=0) %>% 
    add_row(day = 364, count=0) %>% 
    arrange(day) %>% 
    mutate(survey = seq(1, length(day), by=1))  %>%  #numbers the surveys
    #add theoretical first day
    mutate(day.x1 = lead(day,1)-res.time) %>% 
    mutate(day.x2 = lead(day,1)-
             lead(count,1)/(abs(lead(count,2)-lead(count,1))/(lead(day,2)-lead(day,1)))) %>% 
    mutate(day = ifelse(day %in% 0, pmax(day.x1,day.x2, na.rm=T),day)) %>% 
    #add theoretical last day 
    mutate(day.x3 = lag(day,1)+res.time) %>% 
    mutate(day.x4 = lag(day,1)-
             lag(count,1)/(abs(lag(count,2)-lag(count,1))/(lag(day,2)-lag(day,1)))) %>% 
    mutate(day = ifelse(day %in% last(day), pmin(day.x3,day.x4, na.rm=T),day)) %>% 
    select(-c(day.x1,day.x2, day.x3, day.x4)) %>% 
    #good till here
    mutate(day_1 = lag(day))  %>% 
    mutate(count_1 = lag(count))  %>%
    mutate(int = day - day_1) %>% 
    mutate(fish_days = c(NA,diff(day)*zoo::rollmean(count,2))) %>% 
    summarize(fish_days = sum(na.omit(fish_days)))   %>% 
    mutate(auc = fish_days/res.time) %>% 
    select(auc)
}

#example:
test.auc.allinone(day = c(10,20,30), count = c(100, 200, 50), 
                  res.time=15)


# import and re-calculate the AUC for AUC estimates.
#make these into a function so it can be re-done repeatedly









#This section creates a time series of nanika escapement from 2004-2024, using the expanded sockeye spawners (spawning sockeye, adjusted for survey extent, with obvs.eff applied)
nanika.sils <- read_csv("RH_SILs.toreview-nanikaSKCH2004-2024_Adjusted3.csv", 
                     na = "NA")

Nanika.auc <- nanika.sils %>% 
  dplyr::filter(StreamId %in% 428) %>% 
  dplyr::select(StreamId, StreamName, Inspection.Year,SilDate,Observer,
                Affiliation,TargetSockeye,PrimaryInspMode,Sock_AL_HoldOutside,
                Sock_AL_Hold,Sock_AL_Spawning,Sock_AL_ObsTotal,
                Sock_AL_EstTotal,Sock_AL_New,Sock_AL_EstReliability,
                Sock_AL_FishCountability,Sock_AD_Obs,Sock_AD_Est,
                Sock_AD_.PreSpawnMort,obs.eff,surveyed.full.extent,
                proportion.surveyed,barriers.present, effective.propsk.surveyed,
                sock_spawn_est_total, expanded_sock_spawn) %>% 
  mutate(julian = yday(SilDate), 
         obs.eff = ifelse(!is.na(obs.eff),obs.eff,0.8),
         expanded = expanded_sock_spawn/obs.eff) %>% 
  filter(TargetSockeye %in% T)

ggplot(Nanika.auc)+
  geom_point(aes(x=julian,y=expanded, col=as.factor(Inspection.Year)))+
  geom_line(aes(x=julian,y=expanded,col=as.factor(Inspection.Year)))

#recalc auc
Nanika.auc.recalc <- Nanika.auc %>% 
  dplyr::group_by(Inspection.Year) %>% 
  dplyr::summarize(test.auc.allinone(day = julian, count= expanded, 
                                     res.time=15))

plot.new.calc.Nanika <- ggplot(Nanika.auc.recalc)+
  geom_point(aes(x=Inspection.Year, y=auc))+
  geom_line(aes(x=Inspection.Year, y=auc))+
  scale_x_continuous(breaks= seq(2004,2024,1))+
  scale_y_continuous(limits = c(0,27000), breaks = seq(0,27000,5000))
plot.new.calc.Nanika





#NOT RUNNING THIS SECTION
# check what the original estimates by year were

#nan.auc <- read_excel("AUC.restime.bab_4-Feb-2025export.xlsx", 
#                      sheet="AUC.restime.bab", na = NA)

#BabS4auc <- bab.auc %>% 
#  filter(StreamName %in% "BABINE RIVER (SECTION 4)") %>% 
#  mutate(SockAnnualEst.num = as.numeric(SockAnnualEst))

#plot.old.calc.BabS4 <- ggplot(BabS4auc)+
#  geom_point(aes(x=Year, y=SockAnnualEst.num, shape=`Timing capured?`))+
#  geom_line(aes(x=Year, y=SockAnnualEst.num))+
#  scale_x_continuous(breaks= seq(2010,2022,1))+
#  scale_y_continuous(limits = c(0,27000), breaks = seq(0,27000,5000))+
#  theme(legend.position = "bottom")
#plot.old.calc.BabS4



#plot(arrangeGrob(plot.new.calc.BabS4,plot.old.calc.BabS4))







##RH added this section to plot escepement over survey years (2004-2024) testing multiple residence times
# Define residence times to test
residence_times <- c(8, 12, 14.25, 16, 19)

# Expand the dataset to include all residence time combinations
Nanika.auc.recalc <- Nanika.auc %>%
  tidyr::expand_grid(res.time = residence_times) %>%
  dplyr::group_by(Inspection.Year, res.time) %>%
  dplyr::summarize(auc = test.auc.allinone(day = julian, count = expanded, res.time = unique(res.time)) %>% pull(auc),
                   .groups = "drop")

# Plot AUC estimates for different residence times
plot.new.calc.Nanika <- ggplot(Nanika.auc.recalc, aes(x = Inspection.Year, y = auc, color = as.factor(res.time))) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(2004, 2024, 2)) +
  scale_y_continuous(limits = c(0, 27000), breaks = seq(0, 27000, 5000)) +
  labs(color = "Residence Time (days)", y = "AUC Estimate", x = "Year") +
  theme_minimal()

plot.new.calc.Nanika
